import os

# --- Chemins r√©seau (√† modifier si n√©cessaire) ---
SOURCE_NM_DIR = r"C:\Users\alexandre.gigante\Documents\NM B2B\LOAD"
DEST_DATA_DIR = r"C:\Users\alexandre.gigante\Documents\aiglon_d√©mo"

def generer_contenu_js(jour_index, data_content):
    """
    G√©n√®re le contenu complet d'un fichier JavaScript en utilisant un mod√®le
    bas√© sur l'exemple fourni.

    Args:
        jour_index (int): L'index du jour (0 pour J+0, 1 pour J+1, etc.).
        data_content (str): Les donn√©es brutes (d√©j√† √©chapp√©es) √† ins√©rer.

    Returns:
        str: Le contenu complet du fichier .js pr√™t √† √™tre √©crit.
    """
    if jour_index == 0:
        # Cas sp√©cial pour J+0
        description_jour = "J+0 (Jour m√™me)"
        nom_constante = "nmPredictRawData"
        nom_variable_window = f"nmpredictj{jour_index}Data"
        commentaire_zone = "nmPredictRawData"
    else:
        # Cas g√©n√©ral pour J+1, J+2, etc.
        description_jour = f"J+{jour_index}"
        nom_constante = f"nmpredictj{jour_index}Data"
        nom_variable_window = nom_constante
        commentaire_zone = nom_constante

    # Mod√®le (template) du fichier JS, rempli avec les bonnes informations
    js_template = f"""/**
 * üìä DONN√âES NM PREDICT {description_jour}
 *
 * Ce fichier contient les donn√©es Predict NM pour le jour {description_jour}.
 * Utilis√© par le bouton "NM Predict"
 *
 * üìç ZONE DE COPIER-COLLER : Remplacer le contenu de la variable {commentaire_zone} ci-dessous
 *
 * Format : Copier-coller directement le contenu de votre fichier NM Predict
 * (ligne JSON de m√©tadonn√©es + donn√©es CSV avec en-t√™tes)
 */

const {nom_constante} = `{data_content}`;

// ‚¨áÔ∏è COLLER VOS DONN√âES NM PREDICT {description_jour} ICI - Remplacer tout le contenu entre les backticks ci-dessus ‚¨áÔ∏è
// Copier-coller directement votre fichier NM Predict complet (ligne JSON + donn√©es CSV)
// ‚¨ÜÔ∏è FIN DE LA ZONE DE COPIER-COLLER ‚¨ÜÔ∏è

// Export pour utilisation dans d'autres fichiers
//export default {nom_constante};

// Exposer les donn√©es via une variable globale
window.{nom_variable_window} = {nom_constante};

console.log('‚úÖ Donn√©es NM Predict {description_jour} charg√©es');
"""
    return js_template

def update_nm_predict_data():
    """
    G√©n√®re les fichiers nmpredictjXData.js (X de 0 √† 4) avec les donn√©es NM Predict
    en utilisant une structure de fichier pr√©d√©finie.
    """
    print("D√©but de la mise √† jour des donn√©es NM Predict...")
    
    # S'assurer que le dossier de destination existe
    os.makedirs(DEST_DATA_DIR, exist_ok=True)

    for i in range(5):
        source_file_name = f"predict_j{i}.txt"
        source_file_path = os.path.join(SOURCE_NM_DIR, source_file_name)
        dest_file_name = f"nmpredictj{i}Data.js"
        dest_file_path = os.path.join(DEST_DATA_DIR, dest_file_name)

        print(f"\nTraitement de {source_file_name} -> {dest_file_name}")

        # 1. Lire le contenu du fichier source .txt
        try:
            with open(source_file_path, 'r', encoding='utf-8') as f:
                nm_data_content = f.read()
        except FileNotFoundError:
            print(f"Fichier source non trouv√© : {source_file_path}. Passage au suivant.")
            continue
        except Exception as e:
            print(f"Erreur lors de la lecture du fichier source {source_file_path} : {e}")
            continue

        # 2. √âchapper les backticks (apostrophes inverses) pour JavaScript
        escaped_nm_data_content = nm_data_content.replace('`', '\\`')

        # 3. G√©n√©rer le contenu JS complet √† partir de notre mod√®le
        updated_js_content = generer_contenu_js(i, escaped_nm_data_content)

        # 4. √âcrire le contenu g√©n√©r√© dans le fichier de destination (l'√©crase s'il existe)
        try:
            with open(dest_file_path, 'w', encoding='utf-8') as f:
                f.write(updated_js_content)
            print(f"Fichier {dest_file_path} g√©n√©r√© avec succ√®s.")
        except Exception as e:
            print(f"Erreur lors de l'√©criture dans le fichier {dest_file_path} : {e}")

if __name__ == "__main__":
    update_nm_predict_data()